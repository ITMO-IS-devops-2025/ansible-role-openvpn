---
# tasks file for ansible-role-openvpn get keys
- name: Install Open-VPN required packages
  become: true
  ansible.builtin.package:
   name: "{{ item }}"
   state: present
  with_list:
    "{{ openvpn_required_packages }}"

- name: Ensure /easy-rsa exists
  ansible.builtin.file:
    path: "{{ __openvpn_easy_rsa_configuration_directory }}"
    state: directory
    mode: "0777"

- name: Easy-RSA init-pki
  ansible.builtin.command:
    cmd: "{{ __openvpn_easy_rsa_bin }} init-pki"
    chdir: "{{ __openvpn_easy_rsa_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}"

- name: Deploy Easy-RSA env vars
  template:
    src: 'easyrsa.j2'
    dest: '{{ __openvpn_easyrsa_vars }}'

- name: Easy-RSA build-ca
  ansible.builtin.command:
    cmd: "{{ __openvpn_easy_rsa_bin }} --batch --vars={{ __openvpn_easyrsa_vars }} build-ca nopass"
    chdir: "{{ __openvpn_easy_rsa_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}/ca.crt"

- name: Easy-RSA gen-dh
  ansible.builtin.command:
    cmd: "{{ __openvpn_easy_rsa_bin }} --vars={{ __openvpn_easyrsa_vars }} gen-dh"
    chdir: "{{ __openvpn_easy_rsa_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}/dh.pem"

- name: Easy-RSA build-server-full server nopass
  ansible.builtin.command:
    cmd: "{{ __openvpn_easy_rsa_bin }} --vars={{ __openvpn_easyrsa_vars }} build-server-full server nopass"
    chdir: "{{ __openvpn_easy_rsa_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}/issued/server.crt"

- name: Easy-RSA build-client-full client nopass
  ansible.builtin.command:
    cmd: "{{ __openvpn_easy_rsa_bin }} --vars={{ __openvpn_easyrsa_vars }} build-client-full client nopass"
    chdir: "{{ __openvpn_easy_rsa_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}/issued/client.crt"
  
- name: Easy-RSA gen-crl
  ansible.builtin.command:
    cmd: "{{ __openvpn_easy_rsa_bin }} --vars={{ __openvpn_easyrsa_vars }} gen-crl"
    chdir: "{{ __openvpn_easy_rsa_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}/crl.pem"

- name: Openvpn generate ta.key
  ansible.builtin.command:
    cmd: openvpn --genkey --secret ta.key
    chdir: "{{ __openvpn_pki_configuration_directory }}"
    creates: "{{ __openvpn_pki_configuration_directory }}/ta.key"

- name: Copy files to openvpn configuration directory
  ansible.builtin.copy:
    src: "{{ __openvpn_pki_configuration_directory }}/{{ item }}"
    dest: "{{ openvpn_configuration_directory }}/{{ item | basename }}"
    mode: "0640"
    remote_src: true
  loop:
    "{{ openvpn_key_files }}"
  notify:
    - Restart openvpn

- name: Place server.conf
  ansible.builtin.template:
    src: server.conf.j2
    dest: "{{ openvpn_configuration_directory }}/server.conf"
    owner: root
    mode: "0640"
  notify:
    - Restart openvpn

- name: Place client.ovpn
  ansible.builtin.template:
    src: client.conf.j2
    dest: "{{ openvpn_result_directory }}/client.ovpn"
    owner: root
    mode: "0640"
  delegate_to: localhost
  notify:
    - Restart openvpn

- name: Copy files to openvpn for client
  ansible.builtin.fetch:
    src: "{{ __openvpn_pki_configuration_directory }}/{{ item }}"
    dest: "{{ openvpn_result_directory }}/"
    flat: yes
  loop:
    "{{ openvpn_client_key_files }}"
  notify:
    - Restart openvpn
  
- name: Flush handlers
  meta: flush_handlers

- name: Open-VPN server up
  ansible.builtin.include_tasks:
    file: ufw.yml